
# mablung-makefile-include-build-path := $(patsubst %/,%,$(dir $(realpath $(lastword $(MAKEFILE_LIST)))))
# $(info mablung-makefile-include-build-path := $(mablung-makefile-include-build-path))

build: build-all

build-all: $(projectPath)/release.build-folder;

$(projectPath)/release.build-folder: $(projectPath)/release.create-folder
	@$(MAKE) --directory=$(subst /release,/source,$(patsubst %.build-folder,%,$@)) --jobs --makefile=$(realpath $(firstword $(MAKEFILE_LIST))) --no-print-directory build-folder
# @npx shx echo build .... $(patsubst $(projectPath)/%,%,$(subst /release,/source,$(patsubst %.build-folder,%,$@)))

$(projectPath)/release.create-folder:
	$(if $\
		$(wildcard $(patsubst %.create-folder,%,$@)),$\
		@$(shx) echo nada rel,$\
		@$(shx) echo create .... $(patsubst $(projectPath)/%,%,$(patsubst %.create-folder,%,$@)))
	$(if $\
		$(wildcard $(patsubst %.create-folder,%,$@)),$\
		@$(shx) echo -n,$\
		@$(shx) mkdir -p $(patsubst %.create-folder,%,$@))

ifneq ($(CURDIR),$(projectPath))

sourcePath := $(CURDIR)
sourceContent := $(call contentOf,$(sourcePath))

ifndef filterReleaseContent
filterReleaseContent = $(1)
endif

releaseContent := $(call $\
										filterReleaseContent,$\
										$(foreach $\
											path,$\
											$(sourceContent),$\
											$(subst $\
												/source/,$\
												/release/,$\
												$(if $\
													$(call contentOf,$(path)),$\
													$(if $\
														$(wildcard $(path)/makefile),$\
														$(path).make-folder,$\
														$(path).build-folder),$\
													$(path)))))

# $(info --------------------)
# $(info sourcePath = $(patsubst $(projectPath)/%,%,$(sourcePath)))
# $(info sourceContent = $(patsubst $(projectPath)/%,%,$(sourceContent)))
# $(info releaseContent = $(patsubst $(projectPath)/%,%,$(releaseContent)))
# $(info --------------------)

$(projectPath)/release/%.make-folder:
	@$(MAKE) --directory=$(subst /release,/source,$(patsubst %.make-folder,%,$@)) --no-print-directory

# @$(shx) echo make ..... $(patsubst $(projectPath)/%,%,$(subst /release,/source,$(patsubst %.make-folder,%,$@)))

$(projectPath)/release/%.build-folder: $(projectPath)/release/%.create-folder
	@$(MAKE) --directory=$(subst /release,/source,$(patsubst %.build-folder,%,$@)) --makefile=$(realpath $(firstword $(MAKEFILE_LIST))) --no-print-directory build-folder

# $(info $$(projectPath)/release/%.build-folder:: in mablung-makefile/include/build/build)
# @$(shx) echo build .... $(patsubst $(projectPath)/%,%,$(subst /release,/source,$(patsubst %.build-folder,%,$@)))

$(projectPath)/release/%.create-folder:
	$(if $\
		$(wildcard $(patsubst %.create-folder,%,$@)),$\
		@$(shx) echo -n,$\
		@$(shx) echo create .... $(patsubst $(projectPath)/%,%,$(patsubst %.create-folder,%,$@)))
	$(if $\
		$(wildcard $(patsubst %.create-folder,%,$@)),$\
		@$(shx) echo -n,$\
		@$(shx) mkdir -p $(patsubst %.create-folder,%,$@))

# $(info $$(projectPath)/release/%.create-folder: in mablung-makefile/include/build/build)

$(projectPath)/release/%.cjs: eslintFlag := --fix
$(projectPath)/release/%.cjs: babelFlag := --source-maps
$(projectPath)/release/%.cjs: $(projectPath)/source/%.cjs
	@$(shx) echo compile ... $(patsubst $(projectPath)/%,%,$<) to $(patsubst $(projectPath)/%,%,$@)
	@$(eslint) $< $(eslintFlag)
	@$(babel) $< --out-file $@ $(babelFlag)

$(projectPath)/release/%.js: eslintFlag := --fix
$(projectPath)/release/%.js: babelFlag := --source-maps
$(projectPath)/release/%.js: $(projectPath)/source/%.js
	@$(shx) echo compile ... $(patsubst $(projectPath)/%,%,$<) to $(patsubst $(projectPath)/%,%,$@)
	@$(eslint) $< $(eslintFlag)
	@$(babel) $< --out-file $@ $(babelFlag)

$(projectPath)/release/.DS_Store: ;
$(projectPath)/release/%/.DS_Store: ;

$(projectPath)/release/.babelrc.json: ;
$(projectPath)/release/%/.babelrc.json: ;

$(projectPath)/release/.eslintrc.json: ;
$(projectPath)/release/%/.eslintrc.json: ;

$(projectPath)/release/%: $(projectPath)/source/%
	@$(shx) echo copy ...... $(patsubst $(projectPath)/%,%,$<) to $(patsubst $(projectPath)/%,%,$(patsubst %/,%,$(dir $@)))
	@$(shx) cp -R $< $(patsubst %/,%,$(dir $@))

build-folder: $(releaseContent)
	@$(shx) echo -n 

copy-folder::
	@$(shx) echo copy ...... $(patsubst $(projectPath)/%,%,$(sourcePath)) to $(patsubst $(projectPath)/%,%,$(patsubst %/,%,$(dir $(subst /source/,/release/,$(sourcePath)))))
	@$(shx) cp -R $(sourcePath) $(patsubst %/,%,$(dir $(subst /source/,/release/,$(sourcePath))))
	@$(shx) rm -f $(subst /source/,/release/,$(sourcePath))/makefile

# @$(shx) echo delete ... $(patsubst $(projectPath)/%,%,$(subst /source/,/release/,$(sourcePath))/makefile)

ignore-folder::
	@$(shx) echo ignore .... $(patsubst $(projectPath)/%,%,$(sourcePath))

# @$(shx) echo -n 

endif
