
ifneq ($(is-cleaning),true)
ifneq ($(is-building),true)

# --------------------
.PHONY: build pre-build lint pre-lint compile pre-compile
# --------------------

export exclude-source-folder += makefile
export exclude-source-file += .babelrc.json .DS_Store .eslintrc.json makefile

build:: pre-build lint compile
	@:

pre-build:: ;

lint:: pre-lint
	$(info - lint ---------------------------------)
	@npx eslint --cache --cache-location data/cache/eslint.json $(eslint-parameter) source 

pre-lint:: ;

compile:: pre-compile
	$(info - compile ------------------------------)
	$(if $(is-verbose),@echo create .... release)
	@npx shx mkdir -p release
	$(if $(is-verbose),@echo build ..... source)
	@$(MAKE) $(if $(job-count),--jobs=$(job-count),--jobs) --no-print-directory build is-building=true current-source-folder=source current-release-folder=release

pre-compile:: ;

else

make-folder = $(strip $\
								$(foreach $\
									item,$\
									$(filter-out $\
										$(exclude-source-folder),$\
										$(call get-content-item,$(current-source-folder))),$\
									$(if $\
										$(call get-content-item,$(item)),$\
										$(if $\
											$(wildcard $(item)/makefile),$\
											$(item)))))

build-folder = $(strip $\
									$(foreach $\
										item,$\
										$(filter-out $\
											$(exclude-source-folder),$\
											$(call get-content-item,$(current-source-folder))),$\
										$(if $\
											$(call get-content-item,$(item)),$\
											$(if $\
												$(wildcard $(item)/makefile),,$\
												$(item)))))

build-file = $(strip $\
								$(foreach $\
									item,$\
									$(filter-out $\
										$(addprefix $\
											$(current-source-folder)/,$\
											$(exclude-source-file)),$\
										$(call get-content-item,$(current-source-folder))),$\
									$(patsubst $\
										source/%,$\
										release/%,$\
										$(if $\
											$(call get-content-item,$(item)),,$\
											$(item)))))

# --------------------
.PHONY: build copy ignore debug
# --------------------

build:: $(addsuffix .make,$(make-folder)) $(addsuffix .compile,$(build-folder)) $(build-file)
	@:

source/%.make: release/%.create
	$(if $(is-verbose),@echo make ...... $(patsubst %.make,%,$@))
	@$(MAKE) --makefile=$(patsubst %.make,%,$@)/makefile --no-print-directory current-source-folder=$(patsubst %.make,%,$@) current-release-folder=$(patsubst %.create,%,$<)

source/%.compile: release/%.create
	$(if $(is-verbose),@echo build ..... $(patsubst %.compile,%,$@))
	@$(MAKE) --no-print-directory build current-source-folder=$(patsubst %.compile,%,$@) current-release-folder=$(patsubst %.create,%,$<)

release/%.create:
	$(if $(is-verbose),@echo create .... $(patsubst %.create,%,$@))
	@npx shx mkdir -p $(patsubst %.create,%,$@)

release/%.cjs: source/%.cjs
	@echo compile ... $@ $(babel-parameter)
	@npx babel $< --out-file $@ --source-maps true $(babel-parameter)

release/%.js: source/%.js
	@echo compile ... $@ $(babel-parameter)
	@npx babel $< --out-file $@ --source-maps true $(babel-parameter)

release/%: source/%
	@echo copy ...... $@
	@npx shx cp -R $< $(call get-folder,$@)

copy::
	$(if $(is-verbose),@echo copy ...... $(current-release-folder))
	@npx shx rm -Rf $(current-release-folder)
	@npx shx cp -R $(current-source-folder) $(call get-folder,$(current-release-folder))
	$(if $(is-verbose),@echo delete .... $(current-release-folder)/makefile)
	@npx shx rm -f $(current-release-folder)/makefile

ignore::
	$(if $(is-verbose),@echo ignore .... $(current-source-folder))
	@npx shx rm -Rf $(current-release-folder)

debug::
	$(info - debug --------------------------------)
	$(info current-source-folder .... $(current-source-folder))
	$(info current-release-folder ... $(current-release-folder))
	$(info ----------------------------------------)
	$(info exclude-source-folder .... $(exclude-source-folder))
	$(info exclude-source-file ...... $(exclude-source-file))
	$(info make-folder .............. $(make-folder))
	$(info build-folder ............. $(build-folder))
	$(info build-file ............... $(build-file))
	$(info ----------------------------------------)
	@$(MAKE) --no-print-directory build

endif
endif