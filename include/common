		
dirty-item = $(strip $\
							$(shell git status --porcelain | awk '{print $$2}'))
									
ifndef current-folder

.PHONY: version install re-install clean run cover test pre-release set-version release

version::
	$(if $\
		$(shell npx shx which mablung-makefile),$\
		@npx mablung-makefile get-version,$\
		@$(MAKE) run argument="release/command/mablung-makefile.js get-version")

install::
	@npm install

re-install::
	@rm -Rf node_modules package-lock.json
	@npm install

clean::
	@npx shx rm -Rf coverage process release

run:: build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	@node --no-warnings --unhandled-rejections=strict $(or $(argument),$(arg),$(a))

cover:: build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	$(eval export project-name := $(notdir $(CURDIR)))
	@npx shx rm -Rf coverage process
	@npx c8 ava $(or $(argument),$(arg),$(a))
	@npx shx mkdir -p ../Shared/$(project-name)
	@npx shx rm -Rf ../Shared/$(project-name)/coverage
	@npx shx cp -R coverage ../Shared/$(project-name)

test:: build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	@npx shx rm -Rf process
	@npx ava $(or $(argument),$(arg),$(a))

pre-release:: update clean cover
	@npm version prerelease
	@$(MAKE) build source-map=true

release:: clean test
	@npm version $(or $(version),patch)
	@$(MAKE) build source-map=false
	@npm publish --access public
	@git push origin master

endif
