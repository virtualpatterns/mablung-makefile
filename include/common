											
ifeq ($(CURDIR),$(project-path))

.PHONY: install re-install clean run cover test pre-release release

install::
	@npm install

re-install::
	@rm -Rf node_modules package-lock.json
	@npm install

clean::
	@npx shx rm -Rf coverage process release

run:: build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	@node --no-warnings --unhandled-rejections=strict $(or $(argument),$(arg),$(a))

# $(eval project-name := $(notdir $(project-path)))
# $(eval exists-source-map := $(if $\
# 															$(findstring $\
# 																false,$\
# 																$(source-map)),,$\
# 															true))

test:: build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	@npx shx rm -Rf process
	@npx ava $(or $(argument),$(arg),$(a))

# $(if $\
# 	$(exists-source-map),$\
# 	@npx shx mkdir -p ../Shared/$(project-name))
# $(if $\
# 	$(exists-source-map),$\
# 	@npx shx rm -Rf ../Shared/$(project-name)/coverage)
# $(if $\
# 	$(exists-source-map),$\
# 	@npx shx cp -R coverage ../Shared/$(project-name))

# $(if $\
# 	$(exists-source-map),$\
# 	@$(shx) echo copy ...... coverage to ../Shared/$(project-name),$\
# 	@$(shx) echo skip ...... coverage to ../Shared/$(project-name))

cover:: build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	@npx shx rm -Rf coverage process
	@npx c8 ava
	@npx shx mkdir -p ../Shared/$(project-name)
	@npx shx rm -Rf ../Shared/$(project-name)/coverage
	@npx shx cp -R coverage ../Shared/$(project-name)

pre-release:: export source-map := true
pre-release:: clean cover
	@npx shx echo -n

release:: export source-map := false
release:: clean test
	@npm version prerelease
	@npm publish --access public
	@git push origin master

endif