
# --mablung-makefile-include-path := $(patsubst %/,%,$(dir $(realpath $(lastword $(MAKEFILE_LIST)))))
# $(info --mablung-makefile-include-path := $(--mablung-makefile-include-path))
											
ifeq ($(CURDIR),$(project-path))

.PHONY: install reinstall clean run test pre-release release

install::
	@npm install

reinstall::
	@rm -Rf node_modules package-lock.json
	@npm install
	@$(MAKE) commit message=post-reinstall

clean::
	@npx shx rm -Rf coverage process release

run:: build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	@node --no-warnings --unhandled-rejections=strict $(or $(argument),$(arg),$(a))

test:: build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	$(eval project-name := $(notdir $(project-path)))
	$(eval exists-source-map := $(if $\
																$(findstring $\
																	false,$\
																	$(source-map)),,$\
																true))
	@npx shx rm -Rf coverage process
	@npx c8 ava $(or $(argument),$(arg),$(a))
	$(if $\
		$(exists-source-map),$\
		@npx shx mkdir -p ../Shared/$(project-name))
	$(if $\
		$(exists-source-map),$\
		@npx shx rm -Rf ../Shared/$(project-name)/coverage)
	$(if $\
		$(exists-source-map),$\
		@npx shx cp -R coverage ../Shared/$(project-name))

# $(if $\
# 	$(exists-source-map),$\
# 	@$(shx) echo copy ...... coverage to ../Shared/$(project-name),$\
# 	@$(shx) echo skip ...... coverage to ../Shared/$(project-name))

pre-release:: update reinstall clean test
	@$(MAKE) commit message=post-pre-release

release:: export source-map := false
release:: clean test
	@npm version prerelease
	@npm publish --access public
	@git push origin master

endif