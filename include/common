ifndef current-folder

dirty-item = $(strip $\
							$(patsubst $\
								%/,$\
								%,$\
								$(shell git status --porcelain | awk '{print $$2}')))

# $(info --------------------)
# $(info dirty-item = $(dirty-item))
# $(info --------------------)

.PHONY: pre-version version pre-install install pre-re-install re-install pre-clean clean pre-run run pre-cover cover pre-test test pre-pre-release pre-release release

pre-version:: ;
version:: pre-version
	$(if $\
		$(shell npx shx which mablung-makefile),$\
		@npx mablung-makefile get-version,$\
		@$(MAKE) run argument="release/command/mablung-makefile.js get-version")

pre-install:: ;
install:: pre-install
	@npm install

pre-re-install:: ;
re-install:: pre-re-install
	@rm -Rf node_modules package-lock.json
	@npm install

pre-clean:: ;
clean:: pre-clean
	@npx shx rm -Rf coverage process release

ifeq ($(or $(argument),$(arg),$(a)),)
run::
	$(info An argument must be specified (e.g. argument=release/sandbox/index.js))
	@npx shx false
else
pre-run:: ;
run:: pre-run build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	@node --no-warnings --unhandled-rejections=strict $(or $(argument),$(arg),$(a))
endif

pre-cover:: ;
cover:: pre-cover build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	$(eval project-name := $(notdir $(CURDIR)))
	@npx shx rm -Rf coverage process
	@npx c8 ava $(or $(argument),$(arg),$(a))
	@npx shx mkdir -p ../Shared/$(project-name)
	@npx shx rm -Rf ../Shared/$(project-name)/coverage
	@npx shx mv coverage ../Shared/$(project-name)

pre-test:: ;
test:: pre-test build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	@npx shx rm -Rf process
	@npx ava $(or $(argument),$(arg),$(a))

ifeq ($(dirty-item),)
pre-pre-release:: ;
pre-release:: pre-pre-release update
	@npm version prerelease
	@$(MAKE) clean cover source-map=true
ifeq ($(version),)
release::
	$(info A version must be specified (e.g. version=prerelease, version=patch, or version=1.0.0))
	@npx shx false
else
release:: pre-release
	@npm version $(version)
	@$(MAKE) clean test source-map=false
	@npm publish --access public
	@git push origin master
endif
else
pre-pre-release:: ;
pre-release::
	$(info Git working directory not clean ... $(dirty-item))
	@npx shx false
release::
	$(info Git working directory not clean ... $(dirty-item))
	@npx shx false
endif

endif
