
# --mablung-makefile-include-path := $(patsubst %/,%,$(dir $(realpath $(lastword $(MAKEFILE_LIST)))))
# $(info --mablung-makefile-include-path := $(--mablung-makefile-include-path))
											
ifeq ($(CURDIR),$(project-path))

upgrade-content = $(patsubst $\
										%,$\
										%.upgrade,$\
										$(strip $\
											$(filter $\
												package.json,$\
												$(shell git status --porcelain))))

.PHONY: install refresh upgrade do-upgrade clean run test pre-release release

install:
	@npm install

refresh:
	@rm -Rf node_modules package-lock.json
	@npm install
	@$(MAKE) commit message=post-refresh

upgrade: stop-upgrade :=
upgrade:
	@$(MAKE) commit message=pre-upgrade
	@npx npm-check-updates --upgrade
	@$(MAKE) do-upgrade
	@$(MAKE) commit message=post-upgrade
	$(if $\
		$(strip $(stop-upgrade)),$\
		@npx shx echo make: \*\*\* \[upgrade\] make must be restarted)
	$(if $\
		$(strip $(stop-upgrade)),$\
		@npx shx false)

# @npx shx echo upgrade-content = $(upgrade-content)
# $(if $\
# 	$(upgrade-content),$\
# 	@$(MAKE) do-upgrade)
# @$(MAKE) commit message=post-upgrade
# $(if $\
# 	$(stop-upgrade),$\
# 	@npx shx echo make: \*\*\* \[upgrade\] make must be restarted)
# $(if $\
# 	$(stop-upgrade),$\
# 	@npx shx false)

do-upgrade: $(upgrade-content)
	@$(shx) echo -n

package.json.upgrade:
	@npx shx rm -Rf package-lock.json
	@npm install

clean:
	@npx shx echo delete .... /coverage /process /release
	@npx shx rm -Rf coverage process release

run: build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	@node --no-warnings --unhandled-rejections=strict $(or $(argument),$(arg),$(a))

test: build
	$(eval export MAKEFILE_PATH := $(realpath $(MAKEFILE_LIST)))
	@npx shx rm -Rf coverage process
	@npx c8 ava $(or $(argument),$(arg),$(a))

pre-release: export source-map := false
pre-release: upgrade refresh clean test
	@$(MAKE) commit message=post-pre-release

release: export source-map := false
release: clean test
	@npm version prerelease
	@npm publish --access public
	@git push origin master

endif