{"version":3,"sources":["../../source/test/index.test.js"],"names":[],"mappings":"AAAA,SAAS,aAAa,IAAI,aAA1B,QAA+C,QAA/C;AACA,OAAO,UAAP,MAAuB,UAAvB;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAP,MAAiB,MAAjB;AACA,OAAO,IAAP,MAAiB,KAAjB;AACA,OAAO,GAAP,MAAgB,KAAhB;;AAEA,MAAM,QAAQ,GAAG,GAAG,CAAC,aAAJ,CAAkB,MAAM,CAAC,IAAP,CAAY,GAA9B,CAAjB;AACA,MAAM,UAAU,GAAG,IAAI,CAAC,OAAL,CAAa,QAAb,CAAnB;AACA,MAAM,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,IAAP,CAAY,GAAb,CAA7B;;AAEA,IAAI,CAAC,eAAD,EAAkB,OAAO,IAAP,KAAgB;AACpC,EAAA,IAAI,CAAC,KAAL,CAAW,MAAM,UAAU,CAAC,UAAX,CAAuB,GAAE,UAAW,mBAApC,CAAjB;AACD,CAFG,CAAJ;;AAIA,IAAI,CAAC,gBAAD,EAAmB,OAAO,IAAP,KAAgB;AACrC,EAAA,IAAI,CAAC,KAAL,CAAW,MAAM,UAAU,CAAC,UAAX,CAAuB,GAAE,UAAW,oBAApC,CAAjB;AACD,CAFG,CAAJ;;AAIA,IAAI,CAAC,WAAD,EAAc,OAAO,IAAP,KAAgB;AAChC,EAAA,IAAI,CAAC,IAAL,CAAU,CAAC,MAAM,OAAO,cAAP,CAAP,EAA+B,EAAzC;AACD,CAFG,CAAJ;;AAIA,IAAI,CAAC,UAAD,EAAa,OAAO,IAAP,KAAgB;AAC/B,EAAA,IAAI,CAAC,IAAL,CAAU,CAAC,MAAM,OAAO,aAAP,CAAP,EAA8B,EAAxC;AACD,CAFG,CAAJ;;AAIA,IAAI,CAAC,YAAD,EAAe,OAAO,IAAP,KAAgB;AACjC,EAAA,IAAI,CAAC,IAAL,CAAU,KAAK,CAAC,KAAN,CAAY,MAAM,UAAU,CAAC,QAAX,CAAoB,OAAO,CAAC,OAAR,CAAgB,eAAhB,CAApB,EAAsD,EAAE,YAAY,OAAd,EAAtD,CAAlB,EAAkG,EAA5G;AACD,CAFG,CAAJ;;AAIA,IAAI,CAAC,WAAD,EAAc,OAAO,IAAP,KAAgB;AAChC,EAAA,IAAI,CAAC,IAAL,CAAU,CAAC,MAAM,OAAO,cAAP,CAAP,EAA+B,EAAzC;AACD,CAFG,CAAJ;;AAIA,IAAI,CAAC,uBAAD,EAA0B,OAAO,IAAP,KAAgB;AAC5C,EAAA,IAAI,CAAC,IAAL,CAAU,KAAK,CAAC,KAAN,CAAY,MAAM,UAAU,CAAC,QAAX,CAAoB,OAAO,CAAC,OAAR,CAAgB,0BAAhB,CAApB,EAAiE,EAAE,YAAY,OAAd,EAAjE,CAAlB,EAA6G,EAAvH;AACD,CAFG,CAAJ","file":"index.test.js","sourcesContent":["import { createRequire as CreateRequire } from 'module'\nimport FileSystem from 'fs-extra'\nimport JSON5 from 'json5'\nimport Path from 'path'\nimport Test from 'ava'\nimport URL from 'url'\n\nconst FilePath = URL.fileURLToPath(import.meta.url)\nconst FolderPath = Path.dirname(FilePath)\nconst Require = CreateRequire(import.meta.url)\n\nTest('.babelrc.json', async (test) => {\n  test.false(await FileSystem.pathExists(`${FolderPath}/../.babelrc.json`))\n})\n\nTest('.eslintrc.json', async (test) => {\n  test.false(await FileSystem.pathExists(`${FolderPath}/../.eslintrc.json`))\n})\n\nTest('index.cjs', async (test) => {\n  test.true((await import('../index.cjs')).OK)\n})\n\nTest('index.js', async (test) => {\n  test.true((await import('../index.js')).OK)\n})\n\nTest('index.json', async (test) => {\n  test.true(JSON5.parse(await FileSystem.readFile(Require.resolve('../index.json'), { 'encoding': 'utf-8' })).OK)\n})\n\nTest('index.mjs', async (test) => {\n  test.true((await import('../index.mjs')).OK)\n})\n\nTest('resource/package.json', async (test) => {\n  test.true(JSON5.parse(await FileSystem.readFile(Require.resolve('../resource/package.json'), { 'encoding': 'utf-8' })).OK)\n})\n"]}