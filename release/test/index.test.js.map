{"version":3,"sources":["../../source/test/index.test.js"],"names":[],"mappings":"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","file":"index.test.js","sourcesContent":["import { createRequire as CreateRequire } from 'module'\nimport FileSystem from 'fs-extra'\nimport JSON5 from 'json5'\nimport Path from 'path'\nimport Test from 'ava'\nimport URL from 'url'\n\nconst FilePath = URL.fileURLToPath(import.meta.url)\nconst FolderPath = Path.dirname(FilePath)\nconst Process = process\nconst Require = CreateRequire(import.meta.url)\n\nTest('MAKEFILE_PATH', (test) => {\n  test.deepEqual(Process.env['MAKEFILE_PATH'].split(' '), [\n    Require.resolve('../../makefile'),\n    Require.resolve('../../include/common'),\n    Require.resolve('../../include/commit'),\n    Require.resolve('../../include/build'),\n    Require.resolve('../../include/debug')\n  ])\n})\n\nTest('.babelrc.json', async (test) => {\n  test.false(await FileSystem.pathExists(`${FolderPath}/../.babelrc.json`))\n})\n\nTest('.eslintrc.json', async (test) => {\n  test.false(await FileSystem.pathExists(`${FolderPath}/../.eslintrc.json`))\n})\n\nTest('resource/index.cjs', async (test) => {\n  test.true((await import('./resource/index.cjs')).OK)\n})\n\nTest('resource/index.js', async (test) => {\n  test.true((await import('./resource/index.js')).OK)\n})\n\nTest('resource/index.json', async (test) => {\n  test.true(JSON5.parse(await FileSystem.readFile(Require.resolve('./resource/index.json'), { 'encoding': 'utf-8' })).OK)\n})\n\nTest('resource/copy/makefile', async (test) => {\n  test.false(await FileSystem.pathExists(`${FolderPath}/resource/copy/makefile`))\n})\n\nTest('resource/copy/index.json', async (test) => {\n  test.true(JSON5.parse(await FileSystem.readFile(Require.resolve('./resource/copy/index.json'), { 'encoding': 'utf-8' })).OK)\n})\n\nTest('resource/empty', async (test) => {\n  test.true(await FileSystem.pathExists(`${FolderPath}/resource/empty`))\n})\n\nTest('resource/ignore', async (test) => {\n  test.false(await FileSystem.pathExists(`${FolderPath}/resource/ignore`))\n})\n"]}